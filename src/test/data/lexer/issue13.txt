[YAML Token] Key ('resources')
[YAML Token] Value (':')
WHITE_SPACE ('\n  ')
[YAML Token] Key ('enable_etcd')
[YAML Token] Value (':')
WHITE_SPACE ('\n    ')
[YAML Token] Key ('type')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] Scalar ('"OS::Heat::SoftwareConfig"')
WHITE_SPACE ('\n    ')
[YAML Token] Key ('properties')
[YAML Token] Value (':')
WHITE_SPACE ('\n      ')
[YAML Token] Key ('group')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] Scalar ('ungrouped\n')
WHITE_SPACE ('      ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_file')
[YAML Token] Value (': ')
[YAML Token] Scalar ('fragments/enable-etcd.sh')
[YAML Token] FlowMappingEnd ('}')
WHITE_SPACE ('\n\n  ')
[YAML Token] Key ('master_wc_notify')
[YAML Token] Value (':')
WHITE_SPACE ('\n    ')
[YAML Token] Key ('type')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] Scalar ('"OS::Heat::SoftwareConfig"')
WHITE_SPACE ('\n    ')
[YAML Token] Key ('properties')
[YAML Token] Value (':')
WHITE_SPACE ('\n      ')
[YAML Token] Key ('group')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] Scalar ('ungrouped\n')
WHITE_SPACE ('      ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE ('\n        ')
[YAML Token] Key ('str_replace')
[YAML Token] Value (':')
WHITE_SPACE ('\n          ')
[YAML Token] Key ('template')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] Scalar ('|\n')
[YAML Token] Scalar ('            #!/bin/bash -v\n            wc_notify --data-binary '{"status": "SUCCESS"}'\n')
WHITE_SPACE ('          ')
[YAML Token] Key ('params')
[YAML Token] Value (':')
WHITE_SPACE ('\n            ')
[YAML Token] Key ('wc_notify')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_attr')
[YAML Token] Value (': ')
[YAML Token] FlowSequenceStart ('[')
[YAML Token] Scalar ('master_wait_handle')
[YAML Token] FlowEntry (', ')
[YAML Token] Scalar ('curl_cli')
[YAML Token] FlowSequenceEnd (']')
[YAML Token] FlowMappingEnd ('}')
WHITE_SPACE ('\n\n  ')
[YAML Token] Key ('swarm_master_init')
[YAML Token] Value (':')
WHITE_SPACE ('\n    ')
[YAML Token] Key ('type')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] Scalar ('"OS::Heat::MultipartMime"')
WHITE_SPACE ('\n    ')
[YAML Token] Key ('properties')
[YAML Token] Value (':')
WHITE_SPACE ('\n      ')
[YAML Token] Key ('parts')
[YAML Token] Value (':')
WHITE_SPACE ('\n        ')
[YAML Token] BlockEntry ('- ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_resource')
[YAML Token] Value (': ')
[YAML Token] Scalar ('disable_selinux')
[YAML Token] FlowMappingEnd ('}')
WHITE_SPACE ('\n        ')
[YAML Token] BlockEntry ('- ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_resource')
[YAML Token] Value (': ')
[YAML Token] Scalar ('write_heat_params')
[YAML Token] FlowMappingEnd ('}')
WHITE_SPACE ('\n        ')
[YAML Token] BlockEntry ('- ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_resource')
[YAML Token] Value (': ')
[YAML Token] Scalar ('disable_sshd_gss_auth')
[YAML Token] FlowMappingEnd ('}')
WHITE_SPACE ('\n        ')
[YAML Token] BlockEntry ('- ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_resource')
[YAML Token] Value (': ')
[YAML Token] Scalar ('configure_etcd')
[YAML Token] FlowMappingEnd ('}')
WHITE_SPACE ('\n        ')
[YAML Token] BlockEntry ('- ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_resource')
[YAML Token] Value (': ')
[YAML Token] Scalar ('configure_docker_storage')
[YAML Token] FlowMappingEnd ('}')
WHITE_SPACE ('\n        ')
[YAML Token] BlockEntry ('- ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_resource')
[YAML Token] Value (': ')
[YAML Token] Scalar ('enable_etcd')
[YAML Token] FlowMappingEnd ('}')
WHITE_SPACE ('\n        ')
[YAML Token] BlockEntry ('- ')
[YAML Token] Key ('config')
[YAML Token] Value (':')
WHITE_SPACE (' ')
[YAML Token] FlowMappingStart ('{')
[YAML Token] Key ('get_resource')
[YAML Token] Value (': ')
[YAML Token] Scalar ('master_wc_notify')
[YAML Token] FlowMappingEnd ('}')