YamlFile:18.yml
  PsiElement([YAML Token] DocumentStart)('---')
  PsiWhiteSpace('\n')
  YamlSequenceImpl(sequence)
    YamlMappingImpl(mapping)
      PsiElement([YAML Token] BlockEntry)('-')
      PsiWhiteSpace(' ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('name')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('add ppa for nodejs')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('action')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('apt_repository repo='ppa:chris-lea/node.js' update_cache=yes')
      PsiWhiteSpace('\n\n')
    YamlMappingImpl(mapping)
      PsiElement([YAML Token] BlockEntry)('-')
      PsiWhiteSpace(' ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('name')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('ensure packages are installed')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('action')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('apt pkg={{ item }}')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('with_items')
        YamlTupleValueImpl(value)
          YamlSequenceImpl(sequence)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace('\n      ')
            YamlScalarImpl(scalar)
              PsiElement([YAML Token] BlockEntry)('-')
              PsiWhiteSpace(' ')
              PsiElement([YAML Token] Scalar)('nodejs')
            PsiWhiteSpace('\n      ')
            YamlScalarImpl(scalar)
              PsiElement([YAML Token] BlockEntry)('-')
              PsiWhiteSpace(' ')
              PsiElement([YAML Token] Scalar)('ruby')
            PsiWhiteSpace('\n      ')
            YamlScalarImpl(scalar)
              PsiElement([YAML Token] BlockEntry)('-')
              PsiWhiteSpace(' ')
              PsiElement([YAML Token] Scalar)('rubygems')
            PsiWhiteSpace('\n\n')
    YamlMappingImpl(mapping)
      PsiElement([YAML Token] BlockEntry)('-')
      PsiWhiteSpace(' ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('name')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('install gems for asset compilation')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('gem')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('name={{ item }} state=present user_install=no')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('with_items')
        YamlTupleValueImpl(value)
          YamlSequenceImpl(sequence)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace('\n      ')
            YamlScalarImpl(scalar)
              PsiElement([YAML Token] BlockEntry)('-')
              PsiWhiteSpace(' ')
              PsiElement([YAML Token] Scalar)('sass')
            PsiWhiteSpace('\n      ')
            YamlScalarImpl(scalar)
              PsiElement([YAML Token] BlockEntry)('-')
              PsiWhiteSpace(' ')
              PsiElement([YAML Token] Scalar)('compass')
            PsiWhiteSpace('\n\n')
    YamlMappingImpl(mapping)
      PsiElement([YAML Token] BlockEntry)('-')
      PsiWhiteSpace(' ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('name')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('install grunt for asset compilation')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('npm')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('name=grunt-cli version=0.1.13 global=yes state=present')
      PsiWhiteSpace('\n\n')
    YamlMappingImpl(mapping)
      PsiElement([YAML Token] BlockEntry)('-')
      PsiWhiteSpace(' ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('name')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('install bower for asset dependencies')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('npm')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('name=bower version=1.3.9 global=yes state=present')
      PsiWhiteSpace('\n\n')
    YamlMappingImpl(mapping)
      PsiElement([YAML Token] BlockEntry)('-')
      PsiWhiteSpace(' ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('name')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('Write JolokiaCollector.conf file')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('copy')
        YamlTupleValueImpl(value)
          YamlMappingImpl(mapping)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace('\n    ')
            YamlTupleImpl(tuple)
              YamlTupleKeyImpl(key)
                YamlScalarImpl(scalar)
                  PsiElement([YAML Token] Scalar)('dest')
              YamlTupleValueImpl(value)
                YamlScalarImpl(scalar)
                  PsiElement([YAML Token] Value)(':')
                  PsiWhiteSpace(' ')
                  PsiElement([YAML Token] Scalar)('/etc/diamond/collectors/JolokiaCollector.conf')
            PsiWhiteSpace('\n    ')
            YamlTupleImpl(tuple)
              YamlTupleKeyImpl(key)
                YamlScalarImpl(scalar)
                  PsiElement([YAML Token] Scalar)('content')
              YamlTupleValueImpl(value)
                YamlScalarImpl(scalar)
                  PsiElement([YAML Token] Value)(':')
                  PsiWhiteSpace(' ')
                  PsiElement([YAML Token] Scalar)('|\n      host = 'localhost'\n      enabled = True\n      port = {{mamido_basepkg_metrics_diamond_jolokia_port}}\n      {% if mamido_basepkg_metrics_diamond_jolokia_mbeans|length > 0 %}\n      mbeans = '{{ mamido_basepkg_metrics_diamond_jolokia_mbeans|join("|") }}'\n      {% endif %}\n\n')
            PsiWhiteSpace('  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('notify')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('Restart diamond')
      PsiWhiteSpace('\n  ')
      YamlTupleImpl(tuple)
        YamlTupleKeyImpl(key)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Scalar)('when')
        YamlTupleValueImpl(value)
          YamlScalarImpl(scalar)
            PsiElement([YAML Token] Value)(':')
            PsiWhiteSpace(' ')
            PsiElement([YAML Token] Scalar)('mamido_basepkg_metrics_diamond_jolokia_port')